<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>oton</groupId>
    <artifactId>TrainerHive</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>
    <properties>
	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	<maven.compiler.source>21</maven.compiler.source>
	<maven.compiler.target>21</maven.compiler.target>
	<exec.mainClass>oton.trainerhive.TrainerHive</exec.mainClass>
    </properties>
    <build>
	<resources>
	    <resource>
		<directory>src/main/resources</directory>
		<includes>
		    <include>**/*</include>
		</includes>
	    </resource>
	    <resource>
		<directory>src/main/resources</directory>
		<filtering>false</filtering>
		<includes>
		    <include>**/*.jpg</include>
		    <include>**/*.png</include>
		    <include>**/*.gif</include>
		    <include>**/*.properties</include>
		    <include>**/*.xml</include>
		    <include>**/*.fxml</include>
		    <include>**/*.css</include>
		    <include>**/*</include>
		</includes>
	    </resource>
	</resources>
	<pluginManagement>
	    <plugins>
		<plugin>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-compiler-plugin</artifactId>
		    <version>3.14.0</version>
		    <configuration>
			<source>21</source>
			<target>21</target>
		    </configuration>
		</plugin>
		<plugin>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-resources-plugin</artifactId>
		    <version>3.3.1</version>
		</plugin>
	    </plugins>
	</pluginManagement>
	<plugins>
	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-compiler-plugin</artifactId>
	    </plugin>
	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-resources-plugin</artifactId>
		<executions>
		    <execution>
			<id>copy-resources</id>
			<phase>validate</phase>
			<goals>
			    <goal>copy-resources</goal>
			</goals>
			<configuration>
			    <outputDirectory>${basedir}/target/trainerhive</outputDirectory>
			    <resources>
				<!-- Recursos de texto con filtrado -->
				<resource>
				    <directory>src/main/resources</directory>
				    <filtering>true</filtering>
				    <excludes>
					<exclude>**/*.ttf</exclude>
					<exclude>**/*.png</exclude>
					<exclude>**/*.jpg</exclude>
					<exclude>**/*.svg</exclude>
					<exclude>**/*.ico</exclude>
				    </excludes>
				</resource>
				<!-- Recursos binarios sin filtrado -->
				<resource>
				    <directory>src/main/resources</directory>
				    <filtering>false</filtering>
				    <includes>
					<include>**/*.ttf</include>
					<include>**/*.png</include>
					<include>**/*.jpg</include>
					<include>**/*.svg</include>
					<include>**/*.ico</include>
				    </includes>
				</resource>
			    </resources>
			</configuration>
		    </execution>
		</executions>
	    </plugin>
	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-dependency-plugin</artifactId>
		<version>3.8.1</version>
		<executions>
		    <execution>
			<id>copy-dependencies</id>
			<phase>prepare-package</phase>
			<goals>
			    <goal>copy-dependencies</goal>
			</goals>
			<configuration>
			    <outputDirectory>${project.build.directory}/trainerhive/lib</outputDirectory>
			    <overWriteReleases>false</overWriteReleases>
			    <overWriteSnapshots>false</overWriteSnapshots>
			    <overWriteIfNewer>true</overWriteIfNewer>
			</configuration>
		    </execution>
		</executions>
	    </plugin>
	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-jar-plugin</artifactId>
		<version>3.4.2</version>
		<configuration>
		    <archive>
			<manifest>
			    <addClasspath>true</addClasspath>
			    <classpathPrefix>lib/</classpathPrefix>
			    <mainClass>oton.trainerhive.logic.Main</mainClass>
			</manifest>
			<manifestEntries>
			    <Class-Path>.</Class-Path>
			</manifestEntries>
		    </archive>
		    <finalName>TrainerHive/TrainerHive</finalName>
		</configuration>
	    </plugin>
	    <plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-javadoc-plugin</artifactId>
		<version>3.11.2</version>
		<configuration>
		    <outputDirectory>${project.basedir}/doc</outputDirectory>
		</configuration>
		<executions>
		    <execution>
			<id>generate-javadoc</id>
			<phase>package</phase>
			<goals>
			    <goal>javadoc</goal>
			</goals>
		    </execution>
		</executions>
	    </plugin>
	</plugins>
    </build>
    <dependencies>
	<!-- https://mvnrepository.com/artifact/com.microsoft.sqlserver/mssql-jdbc -->
	<dependency>
	    <groupId>com.microsoft.sqlserver</groupId>
	    <artifactId>mssql-jdbc</artifactId>
	    <version>12.8.1.jre11</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/at.favre.lib/bcrypt -->
	<dependency>
	    <groupId>at.favre.lib</groupId>
	    <artifactId>bcrypt</artifactId>
	    <version>0.10.2</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/com.formdev/flatlaf -->
	<dependency>
	    <groupId>com.formdev</groupId>
	    <artifactId>flatlaf</artifactId>
	    <version>3.5.4</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/com.kitfox.svg/svg-salamander -->
	<dependency>
	    <groupId>com.kitfox.svg</groupId>
	    <artifactId>svg-salamander</artifactId>
	    <version>1.0</version>
	</dependency>
	<dependency>
	    <groupId>org.netbeans.external</groupId>
	    <artifactId>AbsoluteLayout</artifactId>
	    <version>RELEASE240</version>
	</dependency>
	<!-- https://mvnrepository.com/artifact/net.coobird/thumbnailator -->
	<dependency>
	    <groupId>net.coobird</groupId>
	    <artifactId>thumbnailator</artifactId>
	    <version>0.4.20</version>
	</dependency>
    </dependencies>
</project>